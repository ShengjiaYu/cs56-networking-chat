<project default="compile">

  <!-- build.xml for networking-chat, W14, CS56
       name: Eric Chen -->


  <property environment="env"/> <!-- load the environment variables -->
  <property name="webRoot" value="${env.HOME}/public_html/cs56/${projectName}" />
  <property name="webBaseURL" value="http://www.cs.ucsb.edu/~${env.USER}/cs56/${quarter}/issues" />
  <property name="projectName" value="cs56_networking_chat" /> 
  <property name="javadocDest" value="${webRoot}/${projectName}/javadoc" /> 
  <property name="javadocURL" value="${webBaseURL}/${projectName}/javadoc" />
  <property name="jwsDest" value="${webRoot}/${projectName}" /> 
  <property name="jwsURL" value="${webBaseURL}/${projectName}" />
  <property name="mainClassClient" value="edu.ucsb.cs56.projects.networking.chat.chatclient.controller.RunClient" />
  <property name="mainClassServer" value="edu.ucsb.cs56.projects.networking.chat.chatserver.controller.RunServer" />
  <property name="server" value="Server" />
  <property name="client" value="Client" />

<path id="project.class.path">
  <pathelement location="build"/>
  <pathelement location="lib/junit-4.8.2.jar"/>
</path>

  <target name="compile" description="compile the code">
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source" includeantruntime="false" > 
      <classpath refid="project.class.path" />
    </javac>
    <copy todir="build/resources">
      <fileset dir="resources"/>
    </copy>
  </target>


  <target name="clean" description="delete unnecessary files and directories">
    <delete dir="build" quiet="true" />    
    <delete dir="javadoc" quiet="true" />
    <delete dir="dist" quiet="true" />                                  
    <delete dir="temp" quiet="true" />
  </target>


  <target name="javadoc" depends="compile" description="make javadocs from code">
    <delete dir="javadoc" quiet="true" />                                                          
    <javadoc  destdir="javadoc" author="true" version="true" use="true" >                          
      <fileset dir="src" includes="**/*.java"/>                                                     
      <classpath refid="project.class.path" />                                                                                                                
    </javadoc>                                                                                     
    
    <!-- delete the old javadoc -->                                                                
    <delete quiet="true" dir="${javadocDest}" />                                                   
    
    <!-- copy everything you just made to the javadoc destination, and then make it readable -->   
    
    <copy todir="${javadocDest}" >                                                                 
      <fileset dir="javadoc"/>                                                                     
    </copy>                                                                                        
    
    <!-- Note: this only does the chmod command on the                                             
         javadoc subdirectory and its contents.  You MIGHT have to                                 
         MANUALLY do the chmod on the parent directories.  However,                                
         you should only need to do that once. -->                                                 
    
    <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" />                            
    <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" />                         
    <echo>Javadoc deployed to: ${javadocURL}</echo>   
  </target>  


  <target name="test" depends="compile" description="Run JUnit tests">
    <junit haltonerror="no" haltonfailure="no">
      <classpath refid="project.class.path" />
  
      <batchtest fork="yes">
        <fileset dir="src">
          <!-- this will pick up every class with a name ending in Test -->
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>

      <formatter type="plain" usefile="false" /> 
      
    </junit>
  </target>


 <target name="dist" depends="compile" description="Make jar files">
    <mkdir dir="dist" />
    <mkdir dir="build/resources"/>
    <copy todir="build/resources">
      <fileset dir="resources"/>
    </copy>

    <!-- <jar destfile="dist/${client}.jar" basedir="build" includes="edu/ucsb/cs56/${quarter}/${env.USER}/chatclient/**" excludes="**/chatserver"> -->

    <jar destfile="dist/${client}.jar" basedir="build" >
      <manifest>                                                                 
	<attribute name="Main-Class" value="${mainClassClient}"/>                 
      </manifest>                                                                
    </jar>
    <jar destfile="dist/${server}.jar" basedir="build" includes="edu/ucsb/cs56/projects/networking/chat/chatserver/**" excludes="**/chatclient" >
      <manifest>                                                                 
	<attribute name="Main-Class" value="${mainClassServer}"/>                 
      </manifest>                                                                
    </jar>
    <chmod dir="dist" perm="755" type="file" includes="**/*"/>
  </target>  


    

  <target name="runclient" depends="compile, dist" description="run the client">
    <java jar="dist/Client.jar" fork="true" classpath="build" />
  </target>   

  <target name="runserver" depends="compile" description="run the server">
    <java classname="${mainClassServer}" fork="true" classpath="build" />
  </target>

</project>

